// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerce.Office_ManyToMany;

#nullable disable

namespace eCommerce.Office_ManyToMany.Migrations
{
    [DbContext(typeof(eCommerceOfficeContext))]
    [Migration("20241118232746_ColaboradorToVeiculo")]
    partial class ColaboradorToVeiculo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ColaboradorTurma", b =>
                {
                    b.Property<int>("ColaboradoresId")
                        .HasColumnType("int");

                    b.Property<int>("TurmasId")
                        .HasColumnType("int");

                    b.HasKey("ColaboradoresId", "TurmasId");

                    b.HasIndex("TurmasId");

                    b.ToTable("ColaboradorTurma");
                });

            modelBuilder.Entity("eCommerce.Office_ManyToMany.Models.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colaboradores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Anna"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Clara"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Anny"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "ANNA BEATRIZ"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Mateus"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Gabriel"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Pedro"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Thais"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Pedrina"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Erica"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Icaro"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Hugo"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Vitor"
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Mateus"
                        });
                });

            modelBuilder.Entity("eCommerce.Office_ManyToMany.Models.ColaboradorSetor", b =>
                {
                    b.Property<int>("SetorId")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("Criacao")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("SetorId", "ColaboradorId");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("ColaboradoresSetores");

                    b.HasData(
                        new
                        {
                            SetorId = 1,
                            ColaboradorId = 1,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3930), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 1,
                            ColaboradorId = 6,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3963), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 1,
                            ColaboradorId = 7,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3966), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 2,
                            ColaboradorId = 5,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3969), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 2,
                            ColaboradorId = 3,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3972), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 2,
                            ColaboradorId = 7,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3974), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 3,
                            ColaboradorId = 7,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3977), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 3,
                            ColaboradorId = 8,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3979), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 4,
                            ColaboradorId = 14,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3982), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 4,
                            ColaboradorId = 12,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3984), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 4,
                            ColaboradorId = 10,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3989), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 4,
                            ColaboradorId = 9,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3991), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 4,
                            ColaboradorId = 2,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3994), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 4,
                            ColaboradorId = 6,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3996), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 4,
                            ColaboradorId = 11,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(3998), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 5,
                            ColaboradorId = 4,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(4001), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            SetorId = 5,
                            ColaboradorId = 7,
                            Criacao = new DateTimeOffset(new DateTime(2024, 11, 18, 20, 27, 45, 57, DateTimeKind.Unspecified).AddTicks(4003), new TimeSpan(0, -3, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("eCommerce.Office_ManyToMany.Models.ColaboradorVeiculo", b =>
                {
                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DataInicio")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ColaboradorId", "VeiculoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("ColaboradorVeiculo");
                });

            modelBuilder.Entity("eCommerce.Office_ManyToMany.Models.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Setores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Administrativo"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Financeiro"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "RH"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Logistica"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Gerencia"
                        });
                });

            modelBuilder.Entity("eCommerce.Office_ManyToMany.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Turmas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Turma A101"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Turma A102"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Turma A103"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Turma A104"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Turma A105"
                        });
                });

            modelBuilder.Entity("eCommerce.Office_ManyToMany.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Voyage",
                            Placa = "ABC-1234"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Jetta",
                            Placa = "DEF-5678"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "T-Cross",
                            Placa = "GHI-9A00"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Fusca",
                            Placa = "JKL-1011"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Virtus",
                            Placa = "MNO-1T13"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Amarok",
                            Placa = "PQR-1415"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Virtus",
                            Placa = "STU-1617"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Taos",
                            Placa = "VWX-1G19"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Tiguan",
                            Placa = "ZZZ-2000"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Polo",
                            Placa = "AAA-1J34"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Nivus",
                            Placa = "BBB-0L90"
                        });
                });

            modelBuilder.Entity("ColaboradorTurma", b =>
                {
                    b.HasOne("eCommerce.Office_ManyToMany.Models.Colaborador", null)
                        .WithMany()
                        .HasForeignKey("ColaboradoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Office_ManyToMany.Models.Turma", null)
                        .WithMany()
                        .HasForeignKey("TurmasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCommerce.Office_ManyToMany.Models.ColaboradorSetor", b =>
                {
                    b.HasOne("eCommerce.Office_ManyToMany.Models.Colaborador", "Colaborador")
                        .WithMany("ColaboradorSetores")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Office_ManyToMany.Models.Setor", "Setor")
                        .WithMany("ColaboradoresSetor")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("eCommerce.Office_ManyToMany.Models.ColaboradorVeiculo", b =>
                {
                    b.HasOne("eCommerce.Office_ManyToMany.Models.Colaborador", "Colaborador")
                        .WithMany("ColaboradoresVeiculos")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Office_ManyToMany.Models.Veiculo", "Veiculo")
                        .WithMany("ColaboradoresVeiculos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("eCommerce.Office_ManyToMany.Models.Colaborador", b =>
                {
                    b.Navigation("ColaboradorSetores");

                    b.Navigation("ColaboradoresVeiculos");
                });

            modelBuilder.Entity("eCommerce.Office_ManyToMany.Models.Setor", b =>
                {
                    b.Navigation("ColaboradoresSetor");
                });

            modelBuilder.Entity("eCommerce.Office_ManyToMany.Models.Veiculo", b =>
                {
                    b.Navigation("ColaboradoresVeiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
